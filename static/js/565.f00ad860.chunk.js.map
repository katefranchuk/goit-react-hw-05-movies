{"version":3,"file":"static/js/565.f00ad860.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/DetailsCard/DetailsCard.styled.jsx","components/DetailsCard/DetailsCard.jsx","components/MoreDetailsBox/MoreDetailsBox.styled.jsx","components/MoreDetailsBox/MoreDetailsBox.jsx","components/Button/ButtonGoBack.styled.jsx","pages/MovieDetails.jsx","services/api.js","services/dataFormator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(10)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","import styled from 'styled-components';\n\nexport const FilmPoster = styled.img`\n  width: 300px;\n  object-fit: contain;\n`;\n","import PropTypes from 'prop-types';\nimport { getFilmPoster } from 'services/api';\nimport { formatReleaseDate } from 'services/dataFormator';\nimport { FilmPoster } from './DetailsCard.styled';\n\nexport const DetailsCard = ({ movieDetails }) => {\n  // const getGenres = genres => {\n  //   return genres.map(genre => genre.name).join(', ');\n  // };\n\n  const getGenres = genres => {\n    return genres.map(genre => <li key={genre.id}>{genre.name}</li>);\n  };\n\n  return (\n    <>\n      {Boolean(movieDetails) && (\n        <div style={{ display: 'flex', marginTop: '32px' }}>\n          <FilmPoster\n            src={getFilmPoster(movieDetails.poster_path)}\n            alt={movieDetails.title}\n          />\n          <div>\n            <h2>\n              {movieDetails.title} (\n              {formatReleaseDate(movieDetails.release_date)})\n            </h2>\n            <p>Rating</p>\n            <p>{movieDetails.vote_average.toFixed(1)}</p>\n            <p>Overview</p>\n            <p>{movieDetails.overview}</p>\n            <p>Genres</p>\n            <ul style={{ display: 'flex' }}>\n              {getGenres(movieDetails.genres)}\n            </ul>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nDetailsCard.propTypes = {\n  movieDetails: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const DetailsList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: ${({ theme }) => theme.spacing(8)} auto;\n  column-gap: ${({ theme }) => theme.spacing(5)};\n`;\n","import { NavLink, Outlet } from 'react-router-dom';\nimport { DetailsList } from './MoreDetailsBox.styled';\n\nexport const MoreDetailsBox = () => {\n  return (\n    <div>\n      <DetailsList>\n        <li>\n          <NavLink to={'cast'}>Cast</NavLink>\n        </li>\n\n        <li>\n          <NavLink to={'reviews'}>Reviews</NavLink>\n        </li>\n      </DetailsList>\n      <Outlet />\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonGoBack = styled(Link)`\n  display: inline-block;\n  margin-left: auto;\n  margin-right: auto;\n  color: ${({ theme }) => theme.colors.white};\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: ${({ theme }) => theme.spacing(2)};\n\n  padding: ${({ theme }) => `${theme.spacing(3)} ${theme.spacing(5)}`};\n  text-transform: uppercase;\n  font-size: ${({ theme }) => theme.fontSizes.small};\n  font-weight: bold;\n  cursor: pointer;\n  transition: box-shadow ${({ theme }) => theme.animation.cubicBezier};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.small};\n  }\n`;\n","import { DetailsCard } from 'components/DetailsCard/DetailsCard';\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { MoreDetailsBox } from 'components/MoreDetailsBox/MoreDetailsBox';\nimport { getFilmDetails } from 'services/api';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport { ButtonGoBack } from '../components/Button/ButtonGoBack.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const getDetails = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getFilmDetails(movieId);\n\n        setMovieInfo(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getDetails();\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        {isLoading && <Loader />}\n        {error && (\n          <p style={{ textAlign: 'center' }}>\n            {'Oops. Something went wrong üòî'}\n          </p>\n        )}\n        <ButtonGoBack to={location?.state?.from ?? '/'}>Go Back</ButtonGoBack>{' '}\n        {/* MovieDetails –æ—Ç—Ä–∏–º—É—î –æ–±'—î–∫—Ç location —É –º—ñ—Å—Ü—ñ <NavLink to={`/movies/${id}`} state={{ from: location }, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø–∏—à–µ–º–æ const location = useLocation();}> */}\n        {/* —è–∫—â–æ state –º—ñ—Å—Ç–∏—Ç—å –æ–±'—î–∫—Ç from, —Ç–æ –ø–æ—Å–∏–ª–∞—î–º–æ—Å—å –Ω–∞ –Ω—å–æ–≥–æ*/}\n        <DetailsCard movieDetails={movieInfo} />\n        <MoreDetailsBox />\n      </Container>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport defaultImg from '../images/no-poster.png';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6987abdd73bbf0837922d5a4f94ce9fa';\nconst IMAGE_PATH = `https://image.tmdb.org/t/p/w500/`;\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsBySearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getFilmCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getFilmPoster = url => (url ? IMAGE_PATH + url : defaultImg);\n","import { format } from 'date-fns';\n\nexport const formatReleaseDate = date => {\n  return format(Date.parse(date), 'yyyy');\n  // (new Date(), 'yyyy')\n};\n\nexport const formatReviewCreatedDate = date => {\n  return format(Date.parse(date), 'dd MMMM yyyy, HH:mm');\n};\n"],"names":["Section","styled","theme","spacing","FilmPoster","DetailsCard","genres","movieDetails","Boolean","style","display","marginTop","src","getFilmPoster","poster_path","alt","title","formatReleaseDate","release_date","vote_average","toFixed","overview","map","genre","name","id","DetailsList","MoreDetailsBox","to","ButtonGoBack","Link","colors","white","primary","fontSizes","small","animation","cubicBezier","shadows","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","useEffect","getDetails","getFilmDetails","data","message","Loader","textAlign","state","from","BASE_URL","API_KEY","getTrendingFilms","axios","results","getFilmsBySearch","query","page","getFilmReviews","getFilmCast","cast","url","defaultImg","date","format","Date","parse","formatReviewCreatedDate"],"sourceRoot":""}