{"version":3,"file":"static/js/149.d8173303.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { getFilmPoster } from 'services/api';\n\nexport const MovieItem = ({ title, posterPath }) => {\n  return (\n    <>\n      <img src={getFilmPoster(posterPath)} alt={title} />\n      <h2>{title}</h2>\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MoviesListEl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 4fr));\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n","import PropTypes from 'prop-types';\n\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { MoviesListEl } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListEl>\n      {movies.map(({ id, title, poster_path }) => (\n        <li key={id}>\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            {/* —É state –ø–µ—Ä–µ–¥–∞—î–º–æ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é from - –∑–≤—ñ–¥–∫–∏ –ø—Ä–∏–π—à–æ–≤ —é–∑–µ—Ä */}\n            <MovieItem title={title} posterPath={poster_path} />\n          </NavLink>\n        </li>\n      ))}\n    </MoviesListEl>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(10)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nexport const SearchForm = ({ onFormSubmit, defaultValue }) => {\n  const [filmName, setFilmName] = useState(defaultValue);\n\n  const handleChange = event => {\n    setFilmName(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (!filmName.trim()) {\n      //—Ç–æ–±—Ç–æ –ø—É—Å—Ç–∏–π —Ä—è–¥–æ–∫\n      toast.info('Enter some text to search');\n      setFilmName('');\n      return;\n    }\n\n    onFormSubmit(filmName);\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <input\n        name=\"filmName\"\n        value={filmName}\n        type=\"text\"\n        onChange={handleChange}\n      />\n      <button type=\"button\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useEffect } from 'react';\nimport { getFilmsBySearch } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Section } from 'components/Section/Section.styled';\nimport { Container } from 'components/Container/Container.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchedFilms, setSearchedFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const filmQuery = searchParams.get('filter') || '';\n\n  useEffect(() => {\n    if (!filmQuery) return;\n    const getData = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await getFilmsBySearch(filmQuery);\n\n        if (results.length === 0) {\n          setIsEmpty(true);\n          return;\n        }\n\n        setSearchedFilms(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getData();\n\n    return () => {};\n  }, [filmQuery]);\n\n  const formSubmitHendler = query => {\n    setSearchParams(query !== '' ? { filter: query } : {});\n  };\n\n  return (\n    <Section>\n      <Container>\n        <SearchForm onFormSubmit={formSubmitHendler} defaultValue={filmQuery} />\n        {isLoading && <Loader />}\n        {error && (\n          <p style={{ textAlign: 'center' }}>\n            {'Oops. Something went wrong üòî'}\n          </p>\n        )}\n        {!isEmpty ? (\n          <MoviesList movies={searchedFilms} />\n        ) : (\n          <p style={{ textAlign: 'center' }}>Sorry. There are no films.</p>\n        )}\n\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          closeOnClick\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"colored\"\n        />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport defaultImg from '../images/no-poster.png';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6987abdd73bbf0837922d5a4f94ce9fa';\nconst IMAGE_PATH = `https://image.tmdb.org/t/p/w500/`;\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsBySearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getFilmCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getFilmPoster = url => (url ? IMAGE_PATH + url : defaultImg);\n"],"names":["MovieItem","title","posterPath","src","getFilmPoster","alt","MoviesListEl","styled","theme","spacing","MoviesList","movies","location","useLocation","map","id","poster_path","to","state","from","Section","SearchForm","onFormSubmit","defaultValue","useState","filmName","setFilmName","autoComplete","onSubmit","event","preventDefault","trim","toast","name","value","type","onChange","currentTarget","searchedFilms","setSearchedFilms","isLoading","setIsLoading","error","setError","isEmpty","setIsEmpty","useSearchParams","searchParams","setSearchParams","filmQuery","get","useEffect","getData","getFilmsBySearch","results","length","message","query","filter","Loader","style","textAlign","position","autoClose","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","BASE_URL","API_KEY","getTrendingFilms","axios","data","page","getFilmDetails","movieId","getFilmReviews","getFilmCast","cast","url","defaultImg"],"sourceRoot":""}