{"version":3,"file":"static/js/415.d1d4d624.chunk.js","mappings":"oNAGaA,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACjC,OACE,iCACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAcF,GAAaG,IAAKJ,KAC1C,wBAAKA,MAGV,E,SCRYK,E,QAAeC,GAAAA,GAAH,wHAGhB,qBAAGC,MAAkBC,QAAQ,EAA7B,ICCIC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAId,EAAP,EAAOA,MAAOe,EAAd,EAAcA,YAAd,OACV,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA7C,UAEE,SAACZ,EAAD,CAAWC,MAAOA,EAAOC,WAAYc,OAHhCD,EADC,KAUjB,C,sECnBYK,E,QAAUb,GAAAA,QAAH,qEACH,qBAAGC,MAAkBC,QAAQ,GAA7B,IACG,qBAAGD,MAAkBC,QAAQ,GAA7B,G,8ICsCpB,UAnCa,WACX,OAA4CY,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGOK,EAAAA,EAAAA,MAHP,OAGRnB,EAHQ,OAIdY,EAAkBZ,GAJJ,gDAMdgB,EAAS,KAAMI,SAND,yBAQdN,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,KAGD,SAAC,IAAD,WACE,UAAC,IAAD,WACGL,IAAa,SAAC,IAAD,IACbE,IACC,cAAGM,MAAO,CAAEC,UAAW,UAAvB,SACG,6CAGL,SAAC,IAAD,CAAYtB,OAAQW,QAI3B,C,qOCrCKY,EAAW,gCACXC,EAAU,mCAGHL,EAAgB,mCAAG,sGAGpBM,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAAoDC,IAHhC,uBAEpBE,EAFoB,EAE5BC,KAAQD,QAFoB,kBAIvBA,GAJuB,2CAAH,qDAOhBE,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BK,EAD/B,iBAC6CC,IAFtC,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBI,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,oBACmBR,IAFd,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAc,mCAAG,WAAMD,GAAN,yFAGlBP,EAAAA,EAAAA,IAAA,UACLF,EADK,kBACaS,EADb,4BACwCR,IAJtB,uBAElBE,EAFkB,EAE1BC,KAAQD,QAFkB,kBAMrBA,GANqB,2CAAH,sDASdQ,EAAW,mCAAG,WAAMF,GAAN,yFACFP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAS,EADA,4BAC2BR,IAFzB,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKQ,MAJa,2CAAH,sDAOX1C,EAAgB,SAAA2C,GAAG,OAAKA,EAvCrB,mCAuCwCA,EAAMC,CAA9B,C","sources":["components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { getFilmPoster } from 'services/api';\n\nexport const MovieItem = ({ title, posterPath }) => {\n  return (\n    <>\n      <img src={getFilmPoster(posterPath)} alt={title} />\n      <h2>{title}</h2>\n    </>\n  );\n};\n\nMovieItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const MoviesListEl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 4fr));\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n","import PropTypes from 'prop-types';\n\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { MoviesListEl } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesListEl>\n      {movies.map(({ id, title, poster_path }) => (\n        <li key={id}>\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            {/* —É state –ø–µ—Ä–µ–¥–∞—î–º–æ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—é from - –∑–≤—ñ–¥–∫–∏ –ø—Ä–∏–π—à–æ–≤ —é–∑–µ—Ä */}\n            <MovieItem title={title} posterPath={poster_path} />\n          </NavLink>\n        </li>\n      ))}\n    </MoviesListEl>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(10)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","import { Container } from 'components/Container/Container.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Section } from 'components/Section/Section.styled';\nimport { useEffect, useState } from 'react';\nimport { getTrendingFilms } from 'services/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const movies = await getTrendingFilms();\n        setTrendingMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        {isLoading && <Loader />}\n        {error && (\n          <p style={{ textAlign: 'center' }}>\n            {'Oops. Something went wrong üòî'}\n          </p>\n        )}\n        <MoviesList movies={trendingMovies} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport defaultImg from '../images/no-poster.png';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6987abdd73bbf0837922d5a4f94ce9fa';\nconst IMAGE_PATH = `https://image.tmdb.org/t/p/w500/`;\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsBySearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getFilmCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getFilmPoster = url => (url ? IMAGE_PATH + url : defaultImg);\n"],"names":["MovieItem","title","posterPath","src","getFilmPoster","alt","MoviesListEl","styled","theme","spacing","MoviesList","movies","location","useLocation","map","id","poster_path","to","state","from","Section","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchData","getTrendingFilms","message","style","textAlign","BASE_URL","API_KEY","axios","results","data","getFilmsBySearch","query","page","getFilmDetails","movieId","getFilmReviews","getFilmCast","cast","url","defaultImg"],"sourceRoot":""}