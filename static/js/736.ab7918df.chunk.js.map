{"version":3,"file":"static/js/736.ab7918df.chunk.js","mappings":"wQAEaA,E,QAAWC,GAAAA,GAAH,wHAGZ,qBAAGC,MAAkBC,QAAQ,EAA7B,I,SCiCT,EAjCa,WACX,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,IAAYJ,GAFhB,OAETK,EAFS,OAGfN,EAAWM,GAHI,gDAKfC,QAAQC,IAAI,KAAMC,SALH,yDAAH,qDAQhBL,GACD,GAAE,CAACH,KAGF,+BACE,SAACP,EAAD,UACGK,EAAQW,OAAS,GAChBX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,aAA/B,OACV,2BACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAcF,GAAeG,IAAKL,KAC5C,uBAAIA,KACJ,uCAAeC,OAHRF,EADC,OAUrB,C,qOCjCKO,EAAW,gCACXC,EAAU,mCAGHC,EAAgB,mCAAG,sGAGpBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAHhC,uBAEpBG,EAFoB,EAE5BjB,KAAQiB,QAFoB,kBAIvBA,GAJuB,2CAAH,qDAOhBC,EAAgB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BK,EAD/B,iBAC6CC,IAFtC,uBACtBpB,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBqB,EAAc,mCAAG,WAAM1B,GAAN,yFACLqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlB,EADA,oBACmBmB,IAFd,uBACpBd,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdsB,EAAc,mCAAG,WAAM3B,GAAN,yFAGlBqB,EAAAA,EAAAA,IAAA,UACLH,EADK,kBACalB,EADb,4BACwCmB,IAJtB,uBAElBG,EAFkB,EAE1BjB,KAAQiB,QAFkB,kBAMrBA,GANqB,2CAAH,sDASdlB,EAAW,mCAAG,WAAMJ,GAAN,yFACFqB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAlB,EADA,4BAC2BmB,IAFzB,uBACjBd,EADiB,EACjBA,KADiB,kBAIlBA,EAAKuB,MAJa,2CAAH,sDAOXZ,EAAgB,SAAAa,GAAG,OAAKA,EAvCrB,mCAuCwCA,EAAMC,CAA9B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 7fr));\n  gap: ${({ theme }) => theme.spacing(5)};\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCast, getFilmPoster } from 'services/api';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCredits = async () => {\n      try {\n        const data = await getFilmCast(movieId);\n        setCredits(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      <CastList>\n        {credits.length > 0 &&\n          credits.map(({ credit_id, name, character, profile_path }) => (\n            <li key={credit_id}>\n              <img src={getFilmPoster(profile_path)} alt={name} />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport defaultImg from '../images/no-poster.png';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6987abdd73bbf0837922d5a4f94ce9fa';\nconst IMAGE_PATH = `https://image.tmdb.org/t/p/w500/`;\n\nexport const getTrendingFilms = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n  return results;\n};\n\nexport const getFilmsBySearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getFilmDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmReviews = async movieId => {\n  const {\n    data: { results },\n  } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return results;\n};\n\nexport const getFilmCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const getFilmPoster = url => (url ? IMAGE_PATH + url : defaultImg);\n"],"names":["CastList","styled","theme","spacing","useState","credits","setCredits","movieId","useParams","useEffect","getCredits","getFilmCast","data","console","log","message","length","map","credit_id","name","character","profile_path","src","getFilmPoster","alt","BASE_URL","API_KEY","getTrendingFilms","axios","results","getFilmsBySearch","query","page","getFilmDetails","getFilmReviews","cast","url","defaultImg"],"sourceRoot":""}